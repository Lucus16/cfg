#!/usr/bin/env python3

import argparse

syllables = (
    'ja ju jo vu wa wo ra ri ru re ro ta te to da de ' +
    'do ya yu yo sa su se so za ji zu ze zo ka ki ku ' +
    'ke ko ga gi gu ge go ha hi fu he ho ba bi bu be ' +
    'bo pa pi pu pe po na ni nu ne no ma mi mu me mo ').split()

assert len(syllables) == 64, len(syllables)


def generate(entropy=48):
    with open('/dev/urandom', 'rb') as f:
        random = f.read((entropy + 5) // 6)
    return ''.join(syllables[x & 63] for x in random)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description='''
        Generate a hiragana-based password.

        The generator uses a set of 64 hiragana which all consist of two
        romaji, a consonant and a vowel. For every 6 bits of entropy, a
        random romaji is generated, resulting in a pronouncable password.
        ''')
    parser.add_argument(
        'entropy', type=int, nargs='?', default=48,
        help='The number of bits of entropy desired, 48 by default')
    args = parser.parse_args()
    print(generate(args.entropy))
