#!/usr/bin/env python
import sys

lineno = 0

write = sys.stdout.write


def fg(i):
    return "\33[{}m".format(i + 30 if i < 8 else i + 82)


def bg(i):
    return "\33[{}m".format(i + 40 if i < 8 else i + 92)


def bold():
    return "\33[1m"


def clear():
    return "\33[0m"


def show(s):
    s = s.replace("\33[", "").replace("m", ";")[:-1]
    return "{:^7}".format(s)


def grey(bc, fc):
    if bc == 0:
        return fg([0, 8, 7, 15][fc])
    return fg([0, 8, 7, 15][fc]) + bg([0, 8, 7, 15][bc])


def nextline(hl=False):
    global lineno
    lineno += 1
    if hl:
        write("\n" + grey(1, 2) + "{:3} ".format(lineno) + clear())
    else:
        write("\n" + grey(0, 1) + "{:3} ".format(lineno) + clear())


def thrice(s):
    for i in range(3):
        nextline()
        write(s)


def map8(f, s=""):
    r = ""
    for i in range(8):
        r += f(i) + s + clear() + " "
    return r


def block(f, s):
    nextline()
    write(map8(lambda i: show(f(i))))
    thrice(map8(f, s))


empty = "       "
hello = " hello "

block(lambda i: bg(i), empty)
block(lambda i: fg(i), hello)
block(lambda i: bold() + fg(i), hello)
block(lambda i: bg(i + 8), empty)
block(lambda i: fg(i + 8), hello)
block(lambda i: bold() + fg(i + 8), hello)
block(lambda i: bg(15) + fg(i), hello)
block(lambda i: bg(i) + fg(15), hello)

text = "{:76}".format("Lorem ipsum dolor sit amet, consectetur adipiscing elit.")


def greyblock(s):
    nextline()
    nextline()
    write(grey(0, 2) + s + clear())
    nextline(True)
    write(grey(1, 3) + s + clear())
    nextline()
    write(grey(0, 2) + s + clear())
    nextline()
    write(grey(0, 3) + s + clear())
    nextline(True)
    write(grey(1, 3) + s + clear())
    nextline()
    write(grey(0, 3) + s + clear())


greyblock(text)

write(clear() + "\n")
